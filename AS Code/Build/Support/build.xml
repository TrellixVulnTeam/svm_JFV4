<project name="ADminStudio Build" default="all" basedir="..\..\">
	<!-- The branch in Perforce under //AdminStudio/AdminStudio that will be built -->
	<property name="P4_BRANCH" value="Acropolis" /> 

	<property name="VERSION_MAJOR" value="8" />
	<property name="VERSION_MINOR" value="5" />
	<property name="AS_CODENAME" value="Acropolis"/>
	
	<!-- machine specific settings -->
	<property name="P4_CLIENTSPEC" value="ASAMSBUILD" /> <!--Change value to your Perforce ClientSpec-->
	<property name="AMS_SHARED_DIR" value="C:\AS_AMS_Shared"/>  <!-- change value to your machine's AS_AMS_Shared folder-->
	<property name="MSDEV" value="C:\Program Files\Microsoft Visual Studio\Common\MSDev98\Bin\MSDEV.EXE" />
	<property name="MSDOTNETDEV" value="C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\IDE\devenv.EXE" />
	<property name="MSDOTNET_20" value="C:\Program Files\Microsoft Visual Studio 8\Common7\IDE\devenv.EXE" />
	<property name="ASSystemFolder" value="${basedir}/system" />
	<property name="ASBuildSystem" value="${basedir}/Buildsystem" />
	<property name="PreDeployTest" value="${basedir}/DotNet Source/PreDeployTest" />
	<property name="RepackagerSystem" value="${basedir}/Source/Repackager/Wizard/system" />
	<property name="Local_ASBuildDir" value="C:\AdminStudio\AdminStudio_Builds" />
	<property name="AdminStudio_Build_VERSPEC" value="C:\AdminStudio\DailyBuildResult" />
	<!-- InstallShield product command line build settings -->
	<property name="ISCMDLINEBLD" value="C:\Program Files\InstallShield 11\System\IsCmdBld.exe" />
	<!-- PFTW command line build settings -->
	<property name="PFTWBLD" value="C:\Program Files\InstallShield\PackageForTheWeb 4\pftwwiz.exe" />
	<property name="NUnitConsole" value="C:\AdminStudio\NUnit-2.2.8\nunit-console.exe" />
	<property name="ASP_COMPILER" value="C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\aspnet_compiler.exe" />
	<property name="ASP_MERGE" value="C:\Program Files\MSBuild\Microsoft\WebDeployment\v8.0\aspnet_merge.exe" />
	<property name="PreDeployTestReports.Folder" value="C:\AdminStudio\Current\DotNet Source\PreDeployTest\PreDeployTestReports"/>
	<property name="PreDeployTestService.Folder" value="C:\AdminStudio\Current\DotNet Source\PreDeployTest\PreDeployTestService"/>
	<property name="PreDeployTestReports.Precompiled" value="C:\AdminStudio\Current\DotNet Source\PreDeployTest\PreDeployTestReports Precompiled"/>
	<property name="PreDeployTestService.Precompiled" value="C:\AdminStudio\Current\DotNet Source\PreDeployTest\PreDeployTestService Precompiled"/>
	<property name="AMSSource" value="C:\AMS\Current\Source"/>
	
		
	<!-- server settings -->
	<property name="Build_SERVER" value="\\schfileserver\Builds\AdminStudio" />
	<property name="TEST_AS_AUTOMATION" value="\\testengineering\Testing\AdminStudio\Automation" />
	<property name="TESTFX_FOLDER" value="\\testengineering\Testing\AdminStudio\Automation\TestFx" />
	<property name="AppLabs_FTPloc_Map_To_BuildMachine" value="P:\AppLabs" />
	<property name="LatestUpdateServiceMM_Loc" value="\\Server\SharedUsers\DWUS\Release\Merge Module\Product Configuration 1\Release 1\DiskImages\Disk1" />
	
	
	
	<!-- TEST target: use this target to test properties value -->
	<target name="propvaluetest">
		<echo message="${ASSystemFolder}" />
		<echo message="${AdminStudio_Build_VERSPEC}" />
		<echo message="${ASExeName}" />
		<echo message="${build.number}" />
		<echo message="${VERSION_MINOR}" />
	</target>
	
	<target name="clean_and_get">
		<antcall target="cleanASSource" />
		<antcall target="syncToLatest" />
	</target>
	
	<target name="all">
		<antcall target="buildCode" />	
		<property name="Binaries_Built" value="true"/>
		<antcall target="buildSetups" />
		<antcall target="distribute" />		
		<property name="Build_Success" value="true"/>
		<antcall target="unittests" />
	</target>
	
	<target name="distributeLE">		
		<antcall target="supplementalSetups"/>
		<antcall target="makeSMSEdition_Compressed" />
		<antcall target="makeZENworksEdition_Compressed" />
		<antcall target="Copy_Limited_Editions_to_BuildServer" />
		<antcall target="Copy_Limited_Editions_To_FTP" />
	</target>
		
	
	<target name="buildCode">
		<antcall target="getBuildNumber" />	
		<antcall target="buildDotNetBinaries" />		
		<antcall target="buildVCBinaries" />		
		<antcall target="copyToBuildSystem" />
		<antcall target="rebase" />		
		<antcall target="SignBinaries" />
	</target>

	<target name="getBuildNumber" >
		
		<loadproperties srcFile="C:\AdminStudio\DailyBuildResult\buildnumber.properties"/>	

	</target>
	
	<target name="cleanASSource">
		<!--  Clean up source and output directories -->
		<echo message="******* delete AdminStudio source folder from local machine *******" />
		<delete includeemptydirs="true" failonerror="false" >
			<fileset dir="${basedir}" casesensitive="false" defaultexcludes="false">
				<exclude name="**/build.*"/>
			</fileset>
		</delete>
		<echo message="******* delete AdminStudio compressed setups from local machine *******" />
		<delete includeemptydirs="true" failonerror="false" >
			<fileset dir="${Local_ASBuildDir}/Full/Compressed" casesensitive="false" defaultexcludes="false">
				<include name="*.*"/>
			</fileset>
			<fileset dir="${Local_ASBuildDir}/Full/Compressed/no_password" casesensitive="false" defaultexcludes="false">
				<include name="*.*"/>
			</fileset>
		</delete>
		<!-- Do not delete AS_AMS_Shared directory for AS7 VP1 -->
		<!-- <delete includeemptydirs="true" failonerror="false" > -->
		<!--	<fileset dir="${AMS_SHARED_DIR}" />  -->
		<!-- </delete>  -->
		
		
	</target>

	<target name="syncToLatest" unless="changelist">
		<!-- Find out what the latest perforce changelist number is -->
		<echo message="******* get latest AdminStudio files from Perforce *******" />
		<exec executable="p4" failonerror="true" output="p4_changelist.txt">
			<arg line="changes -m 1 -s submitted" />
		</exec>
		<!-- Parse out the change list number -->
		<replaceregexp file="p4_changelist.txt" match="Change ([0-9]+) [\S\s]*" replace="CHANGELIST=\1" />
		<!-- Sync to whatever the latest perforce changelist is -->
		<exec executable="p4" failonerror="true" output="p4_sync.txt">
			<arg line="-c ${P4_CLIENTSPEC} sync -f //AdminStudio/AdminStudio/${P4_BRANCH}/..." />
		</exec>
		
		<echo message="******* get Webtools Arcadia files from Perforce *******" />
		<exec executable="p4" failonerror="true" output="p4_sync.txt">
			<arg line="-c ${P4_CLIENTSPEC} sync -f //AdminStudio/AMS/Current/..." />
		</exec>
	</target>

	
	<target name="clobber">
		
		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/ConflictManager.dsw /MAKE 'ISCMIDE - Win32 Release' /CLEAN" />
		</exec>
		
		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/ConflictManager.dsw /MAKE 'Updater - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/ConflictManager.dsw /MAKE 'AdminWorkFlow - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/Distributer.dsw /MAKE 'Distributer - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/AIW.dsw /MAKE 'AIW - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/isqm.dsw /MAKE 'isqm - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/TestingTools.dsw /MAKE 'TestTools - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/SQLServerReplication.dsw /MAKE 'SQLServerReplication - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/PatchManager.dsw /MAKE 'PatchManager - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/PreDeployTest.dsw /MAKE 'PreDeployTestIDE - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/Flexwrap.dsw /MAKE 'LicWrap - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/Tuner.dsw /MAKE 'ISIDE - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/JobMan/Engine/Engine.dsw /MAKE 'Engine - Win32 Release' /CLEAN" />
		</exec>
		
		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/ISCommonHelper.dsw /MAKE 'ISCommonHelper - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/Repackager.dsw /MAKE 'RepackagerBuildAll - Win32 Release' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/AdminUIFramework/AdminUIFramework.dsp /MAKE 'AdminUIFramework - Win32 Release RepackStandalone' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Source/AdminUIFramework/AdminUIFramework.dsp /MAKE 'AdminUIFramework - Win32 Release Repackager' /CLEAN" />
		</exec>

		<exec executable="${MSDEV}" failonerror="false" os="Windows XP">
			<arg line="${basedir}/Utility/AS7SAct/AS7SAct.dsp /MAKE 'AS7SAct - Win32 Release' /CLEAN" />
		</exec>

	</target>

	<target name="buildVCBinaries">
		<antcall target="buildVCConflictManager" />
		<antcall target="buildVCAdminWorkFlow" />
		<antcall target="buildVCDistributer" />
		<antcall target="buildVCAIW" />
		<antcall target="buildVCQM" />
		<antcall target="buildVCTestingTools" />
		<antcall target="buildVCSQLServerReplication" />
		<antcall target="buildVCPatchManager" />
		<antcall target="buildVCPreDeployTest" />
		<antcall target="buildVCFlexwrap" />
		<antcall target="buildVCActivate" />
		<antcall target="buildVCAdminUIFrameworkStandaloneRepac" />
		<antcall target="buildVCAdminUIFrameworkRepackager" />
		<antcall target="buildVCAesProxy" />
		<antcall target="buildVCTuner" />
		<antcall target="buildVCJobManager" />
		<antcall target="buildVCRepackager" />
		<antcall target="buildVCNovellConverter"/>
		<antcall target="buildInc2Msi" />
		<antcall target="buildASSAct" />
	</target>


	<!-- Build dotnetsource projects include Predeploytest and ASDistribution -->
	<target name="buildDotNetBinaries">
		<antcall target="buildDotNetPreDeploy" />
		<antcall target="buildTestBed" />
		<antcall target="buildTestFx" />
	</target>

	
	<target name="buildVCConflictManager">
		<echo message="******* building ACESDK Debug Library *******" />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt">
			<arg line="${basedir}/Source/ConflictSolver/ACESDKLib/ACESDKLib.dsp /MAKE 'ACESDKLib - Win32 Debug'" />
		</exec>
		<echo message="******* building ACESDK Release Library *******" />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt">
			<arg line="${basedir}/Source/ConflictSolver/ACESDKLib/ACESDKLib.dsp /MAKE 'ACESDKLib - Win32 Release'" />
		</exec>
		<echo message="******* building ConflictManager *******" />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt">
			<arg line="${basedir}/Source/ConflictManager.dsw /MAKE 'ISCMIDE - Win32 Release'" />
		</exec>
		
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt">
			<arg line="${basedir}/Source/ConflictManager.dsw /MAKE 'Updater - Win32 Release'" />
		</exec>
		
		
	</target>
	
	<target name="buildVCAdminWorkFlow">
		<echo message="******* building AdminWorkFlow ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt">
			<arg line="${basedir}/Source/ConflictManager.dsw /MAKE 'AdminWorkFlow - Win32 Release'" />
		</exec>
	</target>


	<target name="buildVCDistributer">
		<echo message="******* building Distributer *******" />	
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt">
			<arg line="${basedir}/Source/Distributer.dsw /MAKE 'Distributer - Win32 Release'" />
		</exec>
	</target>


	<target name="buildVCAIW">
		<echo message="******* building AIW *******" />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt">
			<arg line="${basedir}/Source/AIW.dsw /MAKE 'AIW - Win32 Release'" />
		</exec>
	</target>


	<target name="buildVCQM">
		<echo message="******* building quality monitor *******" />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/isqm.dsw /MAKE 'isqm - Win32 Release'" />
		</exec>
	</target>


	<target name="buildVCTestingTools">
		<echo message="******* building TestingTools ******* " />
		<exec executable="${MSDEV}" failonerror="false" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/TestingTools.dsw /MAKE 'TestTools - Win32 Release'" />
		</exec>
	</target>


	<target name="buildVCSQLServerReplication">
		<echo message="******* building SQLServerReplication ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/SQLServerReplication.dsw /MAKE 'SQLServerReplication - Win32 Release'" />
		</exec>
	</target>


	<target name="buildVCPatchManager">
		<echo message="******* building PatchManager ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/PatchManager.dsw /MAKE 'PatchManager - Win32 Release'" />
		</exec>
	</target>


	<target name="buildVCPreDeployTest">
		<echo message="******* building PreDeployTest ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/PreDeployTest.dsw /MAKE 'PreDeployTestIDE - Win32 Release'" />
		</exec>
	</target>


	<target name="buildVCFlexwrap">
		<echo message="*******  building Flexwrap ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/Flexwrap.dsw /MAKE 'LicWrap - Win32 Release'" />
		</exec>
	</target>


	<target name="buildVCActivate">
		<echo message="*******  building Activate ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/Activate/Activate.dsp /MAKE 'Activate - Win32 Release'" />
		</exec>
	</target>

	<target name="buildVCLegacyUpgradeWizard">
		<echo message="*******  building Activate ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/LegacyUpgradeWizard/LegacyUpgradeWizard.dsp /MAKE 'LegacyUpgradeWizard - Win32 Release'" />
		</exec>
	</target>


	<target name="buildVCAdminUIFrameworkStandaloneRepac">
		<echo message="*******  building AdminUIFramework with NoActivation ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/AdminUIFramework/AdminUIFramework.dsp /MAKE 'AdminUIFramework - Win32 Release RepackStandalone'" />
		</exec>
	</target>

	<target name="buildVCAdminUIFrameworkRepackager">
		<echo message="*******  building AdminUIFramework for Repackager ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/AdminUIFramework/AdminUIFramework.dsp /MAKE 'AdminUIFramework - Win32 Release Repackager'" />
		</exec>
	</target>	

	<target name="buildVCAesProxy">
		<echo message="*******  building Activate ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/AesProxy/AesProxy.dsp /MAKE 'AesProxy - Win32 Release'" />
		</exec>
	</target>


	<target name="buildVCTuner">
		<!-- Run itwi.mak file. Requires to build Tuner -->
		<echo message="******* running itwi.mak *******" />		
		<exec dir="${basedir}/Source/Tuner" executable="nmake.exe" os="Windows XP">
			<arg line="${basedir}/Source/Tuner/itwi.mak"/>
		</exec>
		
		<echo message="*******  building Tuner ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/Tuner.dsw /MAKE 'ISIDE - Win32 Release'" />
		</exec>
		
		<echo message="*******  building iside.exe OEM edition******* " />
			<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/Tuner/iside/iside.dsp /MAKE 'ISIDE - Win32 Release OEM Edition'" />
		</exec>
	</target>


	<target name="buildVCJobManager">
		<echo message="*******  building JobManager ******* " />
				<echo message="*******  building JobManager ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/JobMan/Engine/Engine.dsw /MAKE 'Engine - Win32 Release'" />
		</exec>

	</target>


	<target name="buildVCRepackager">
		<echo message="******* building Repackager ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/Repackager.dsw /MAKE 'RepackagerBuildAll - Win32 Release'" />
		</exec>
	</target>
	
	<target name="buildVCNovellConverter">
		<echo message="******* building Novell Project Converter ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/Repackager/islc/islc.dsp /MAKE 'islc - Win32 Release NovellConverterOnly'" />
		</exec>
	</target>
	
	<target name="buildInc2Msi">
		<echo message="******* building Inc2Msi ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Source/Repackager/Inc2Msi/Inc2Msi.dsw /MAKE 'Inc2Msi - Win32 Release'" />
		</exec>
	</target>

	<target name="buildTestBed">
		<echo message="*******  building TestBed ******* " />
		<exec executable="${MSDOTNET_20}" failonerror="true" os="Windows XP" >
			<arg line="/build Release '${basedir}/Source/TestBed/TestBed.sln' /out '${AdminStudio_Build_VERSPEC}/buildError.txt'" />
		</exec>
	</target>
	<target name="buildDotNetPreDeploy">
		<echo message="*******  building PreDeplytestServices and  PreDeplytestReports ******* " />
		<exec executable="${MSDOTNET_20}" failonerror="true" os="Windows XP" >
			<arg line="/build Release '${basedir}/DotNet Source/PreDeployTest/PreDeployTest.sln' /out '${AdminStudio_Build_VERSPEC}/buildError.txt'" />
		</exec>
		<antcall target="precompile" />		
	</target>
	
	<target name="precompile">
	<echo message="******* precompiling the web site *******" />		
		<copy todir="${PreDeployTestReports.Folder}/ASShare" preservelastmodified="true" >
			<fileset dir="${AMSSource}/ASShare">
				<include name="*.*"/>
			</fileset>
		</copy>
		<copy todir="${PreDeployTestReports.Folder}/LegacyUIControls" preservelastmodified="true" >
			<fileset dir="${AMSSource}/AMS Web Application/LegacyUIControls">
				<include name="**/*.*"/>
			</fileset>
		</copy>
		<copy todir="${PreDeployTestReports.Folder}/webctrl_client" preservelastmodified="true" >
			<fileset dir="${AMSSource}/AMS Web Application/LegacyUIControls/webctrl_client">
				<include name="**/*.*"/>
			</fileset>
		</copy>		
		<copy todir="${PreDeployTestService.Folder}/ASShare" preservelastmodified="true" >
			<fileset dir="${AMSSource}/ASShare">
				<include name="*.*"/>
			</fileset>
			</copy>
		<copy todir="${PreDeployTestService.Folder}/LegacyUIControls" preservelastmodified="true" >
			<fileset dir="${AMSSource}/AMS Web Application/LegacyUIControls">
				<include name="**/*.*"/>
			</fileset>
		</copy>
		<copy todir="${PreDeployTestService.Folder}/webctrl_client" preservelastmodified="true" >
			<fileset dir="${AMSSource}/AMS Web Application/LegacyUIControls/webctrl_client">
				<include name="**/*.*"/>
			</fileset>
		</copy>		
		<exec executable="${ASP_COMPILER}" failonerror="true" os="Windows XP" >
			<arg line="-p '${PreDeployTestReports.Folder}' -v / '${PreDeployTestReports.Precompiled}' -f -u -nologo" />
		</exec>
		<exec executable="${ASP_COMPILER}" failonerror="true" os="Windows XP" >
			<arg line="-p '${PreDeployTestService.Folder}' -v / '${PreDeployTestService.Precompiled}' -f -u -nologo" />
		</exec>
		<echo message="******* merging the precompiled web site *******" />
		<exec executable="${ASP_MERGE}" failonerror="true" os="Windows XP" >
			<arg line="'${PreDeployTestReports.Precompiled}' -o 'AdminStudio.PreDeployReports.dll'" />
		</exec>
		<exec executable="${ASP_MERGE}" failonerror="true" os="Windows XP" >
			<arg line="'${PreDeployTestService.Precompiled}' -o 'AdminStudio.PreDeployService.dll'" />			
		</exec>		
		<delete failonerror="false" >
			<fileset dir="${PreDeployTestReports.Precompiled}" casesensitive="false" defaultexcludes="false">
				<include name="**/*.pdb"/>
				<include name="**/*.csproj"/>
				<include name="**/*.csproj.user"/>
			</fileset>
		</delete>
		<delete failonerror="false" >
			<fileset dir="${PreDeployTestService.Precompiled}" casesensitive="false" defaultexcludes="false">
				<include name="**/*.pdb"/>
				<include name="**/*.csproj"/>
				<include name="**/*.csproj.user"/>
			</fileset>
		</delete>
	</target>
	
	<target name="buildTestFx">
		<echo message="*******  building TestFx ******* " />
		<exec executable="${MSDOTNETDEV}" failonerror="true" os="Windows XP"  >
			<arg line="/build Release  '${basedir}/DotNet Source/TestFx/TestFx.sln' /out '${AdminStudio_Build_VERSPEC}/buildError.txt' " />
		</exec>
	</target>

	<target name="buildASSAct">
		<echo message="*******  building Silent Activator Exe ******* " />
		<exec executable="${MSDEV}" failonerror="true" os="Windows XP" output="${AdminStudio_Build_VERSPEC}/buildError.txt" >
			<arg line="${basedir}/Utility/AS7SAct/AS7SAct.dsp /MAKE 'AS7SAct - Win32 Release'" />
		</exec>
	</target>	



	<!-- copy Current\system folder files to central location - BuildSystem folder to rebase -->
	<target name="copyToBuildSystem">
		<echo message="*******  copying built binaries to buildsystem folder  ******* " />
		<copy todir="${ASBuildSystem}" preservelastmodified="true" >
			<fileset dir="${ASSystemFolder}">
				<include name="*.dll"/>
				<include name="*.ocx"/>
				<include name="*.dl_"/>
				<include name="*.exe"/>
				<include name="*.ini"/>
			</fileset>
		</copy>	

		<copy todir="${ASBuildSystem}" preservelastmodified="true" >
			<fileset dir="${RepackagerSystem}">
				<include name="*.*"/>
			</fileset>
		</copy>

		<!-- <copy todir="${ASBuildSystem}" preservelastmodified="true" > -->
		<!-- 	<fileset dir="${PreDeployTest}/PreDeployTestReports/bin"> -->
		<!-- 		<include name="*.dll"/>	-->
		<!-- 	</fileset> -->
		<!-- </copy> -->

		<!-- <copy todir="${ASBuildSystem}" preservelastmodified="true" > -->
		<!-- 	<fileset dir="${PreDeployTest}/PreDeployTestService/bin"> -->
		<!-- 		<include name="*.dll"/> -->
		<!--	</fileset> -->
		<!-- </copy> -->

		<copy todir="${ASBuildSystem}" preservelastmodified="true" >
			<fileset dir="${AMS_SHARED_DIR}/ASDistribution/Bin">
				<include name="*.dll"/>
			</fileset>
		</copy>
	</target>

	
	<!-- copy converter exes to \\testengineering\testing\AdminStudio\Automation, as per Nan Krull-->
	
	<target name="copyTestFilesToAutomation" >
		<echo message="*******  copying Repackager tools to test server ******* " />
		<copy file="${ASBuildSystem}/inc2msi.exe" todir="${TEST_AS_AUTOMATION}" overwrite="true" failonerror="false" preservelastmodified="true" />
		<copy file="${ASBuildSystem}/INCDiff.exe" todir="${TEST_AS_AUTOMATION}" overwrite="true" failonerror="false" preservelastmodified="true" />
		<copy file="${ASBuildSystem}/IsMsiDiff.exe" todir="${TEST_AS_AUTOMATION}" overwrite="true" failonerror="false" preservelastmodified="true" />
		<copy file="${ASBuildSystem}/IsMsiDiff.ini" todir="${TEST_AS_AUTOMATION}" overwrite="true" failonerror="false" preservelastmodified="true"/>
		<copy file="${ASBuildSystem}/ConvWinInstall.exe" todir="${TEST_AS_AUTOMATION}" overwrite="true" failonerror="false" preservelastmodified="true" />
		<copy file="${ASBuildSystem}/AxtConverter.exe" todir="${TEST_AS_AUTOMATION}" overwrite="true" failonerror="false" preservelastmodified="true" />
		<copy file="${ASBuildSystem}/SMSConverter.exe" todir="${TEST_AS_AUTOMATION}" overwrite="true" failonerror="false" preservelastmodified="true" />
		<copy file="${Local_ASBuildDir}\Repackager\FullBuild\DiskImages\DISK1/standalonerepackager.exe" todir="${TESTFX_FOLDER}" overwrite="true" failonerror="false" preservelastmodified="true" />
		<copy file="${Local_ASBuildDir}\QualityMonitor\Compressed\DiskImages\DISK1/standalonequalitymonitor.exe" todir="${TESTFX_FOLDER}" overwrite="true" failonerror="false" preservelastmodified="true" />
		<copy todir="${TESTFX_FOLDER}" preservelastmodified="true" failonerror="false" >
			<fileset dir="${basedir}/DotNet Source/TestFx/TestFxApplication/bin/release">
				<include name="*.*"/>
			</fileset>
			<fileset dir="${basedir}/DotNet Source/TestFx/TestFxConsole/bin/release">
				<include name="*.*"/>
			</fileset>
		</copy>
	</target>
	
	<!-- rebase dlls -->
	<property name="BaseAddress" value="0x60000000"/>
	<target name="rebase" >
		<echo message="*******  rebasing dlls ******* " />
		<exec executable="rebase.exe" failonerror="false" os="Windows XP">
			<arg line=" /b ${BaseAddress} ${ASBuildSystem}\*.dll ${ASBuildSystem}\*.ocx" />			
		</exec>
		
	</target>

	<!-- SignBinaries -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
		<pathelement location="C:\MacroVisionSantaClara\3rdparty\ant\1.6.2\lib/ant-contrib.jar" />
		</classpath>
	</taskdef>	
	<target name="SignBinaries" >
		<echo message="*******  Signing PEs ******* " />
		
		<for param="file">
		  <path>		  
		  	<fileset dir="${ASBuildSystem}">
				<include name="*.dll"/>
				<include name="*.ocx"/>
				<include name="*.exe"/>							
			</fileset>
			<fileset dir="${basedir}/Source/TestBed/System">
				<include name="*.dll"/>
				<include name="*.ocx"/>
				<include name="*.exe"/>							
			</fileset>						
			<fileset dir="${basedir}/Source/Flexwrap/SWrap/binaries">
				<include name="*.exe"/>							
			</fileset>						
		  </path>
		  <sequential>
			<propertyregex override="yes" property="binary"  input="@{file}" regexp=".*/([^\.]*)\.cpp" replace="\1"/>
			<echo message="Signing @{file}" />
			<exec executable="cmd.exe" failonerror="true" os="Windows XP">
				<arg line="/C ${basedir}/Build/System/SignFileList.bat @{file} ${AdminStudio_Build_VERSPEC}" />
			</exec>		    	
		  </sequential>
		</for>		

		<echo message="Signing ASSAct.exe" />
		<exec executable="cmd.exe" failonerror="true" os="Windows XP">
			<arg line="/C ${basedir}/Build/System/SignFileList.bat ${basedir}\Utility\AS7SAct\Release\ASSAct.exe ${AdminStudio_Build_VERSPEC}" />
		</exec>		    	

	</target>

	<!-- build setup   -->
	<target name="buildSetups">
		<delete includeemptydirs="true" failonerror="false" >
			<fileset dir="${Local_ASBuildDir}" casesensitive="false" defaultexcludes="false">				
			</fileset>
		</delete>
		<!--  <antcall target="copyLatestUSMSM" /> -->
		<echo message="********* start building setups ********" />
		<antcall target="buildSetupRepackager" />
		<antcall target="buildSetupTuner" />
		<antcall target="buildSetupQualityMonitor" />
		<antcall target="CreateSilentActivator" />
		<antcall target="buildSetupAdminStudio_CD" />
		<antcall target="buildSetupAdminStudio_Comp" />		
		<antcall target="updatebuildnumber" />
	</target>

	<target name="copyLatestUSMSM">
		<echo message="********* copying latest update service MM to local machine ********" />
		<copy todir="${ASBuildSystem}" preservelastmodified="true" failonerror="false" >
			<fileset dir="${LatestUpdateServiceMM_Loc}">
				<include name="*.msm"/>
			</fileset>
		</copy>

	</target>
	
	<!-- build Repackager setup   -->
	<target name="buildSetupRepackager">
		<echo message="*******  building Repackager setup ******* " />
		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/Remote Repackager.ism' -r 'Remote Repackager' -a 'Remote Repackager'" />
		</exec>
		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/RepackagerMM.ism' -r 'RepackagerMM' -a 'Repackager'" />
		</exec>	

		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/Repackager.ism' -r 'FullBuild' -a 'Repackager'" />
		</exec>
		
		<antcall target="buildNovellConverter" />
		
	</target>
	
	<target name="buildNovellConverter">
		<echo message="********* building repackager merge module for Novell ********" />
		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/RepackagerNovellMM.ism' -r 'MergeModule' -a 'AdminStudio Converter for ZENWorks'" />
		</exec>
		
		<echo message="********* building Novell converter ********" />			
		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/RepackagerNovell.ism' -r 'Full' -a 'AdminStudio Converter for ZENWorks'" />
		</exec>
	</target>

	<!-- build QualityMonitor setup   -->
	<target name="buildSetupQualityMonitor">
		<echo message="*******  building QualityMonitor setup ******* " />
		
		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/QualityMonitorMM.ism' -r 'QualityMonitorMM' -a 'QualityMonitor'" />
		</exec>	

		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/QualityMonitor.ism' -r 'Compressed' -a 'QualityMonitor'" />
		</exec>
	</target>

	<!-- build Tuner setup   -->
	<target name="buildSetupTuner">
		<echo message="*******  building Tuner setup ******* " />
		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/Tuner Stand Alone MM.ism' -a 'TunerStandalone' -r 'MergeModule'" />
		</exec>

		
	</target>
	
	<!-- build Tuner OEM setup   -->
	<target name="buildSetupTunerOEM">
		<echo message="*******  building Tuner OEM setup ******* " />
		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/ITWI.ism' -a 'TunerOEM' -r 'Compressed'" />
		</exec>
		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/ITWI.ism' -a 'TunerOEM' -r 'Full'" />
		</exec>
	</target>
	
	<!-- build AdminStudio cd image setup   -->
	<target name="buildSetupAdminStudio_CD" >
		<echo message="*******  building AdminStudio CD_Image setup ******* " />
		
		<echo message="******* Copying ActivationGUI.dll *******" />
		<!-- Copying this dll since somehow the Silent one keeps getting into the build!!! -->
		<copy file="${basedir}/Build/Support/Activation/ActivationGui.dll"
			tofile="C:/Program Files/InstallShield 11/System/ActivationSupport/TryAndBuy/ActivationGUI.dll" overwrite="true" failonerror="true" preservelastmodified="true" />
		
		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/AdminStudioClient.ism' -a 'Full' -r 'CD_Image'" />
		</exec>
		
		<antcall target="customizeFull" />		

		<echo message="Signing setup.exe" />
		<exec executable="cmd.exe" failonerror="true" os="Windows XP">
			<arg line="/C ${basedir}/Build/System/SignFileList.bat ${Local_ASBuildDir}\Full\CD_Image\DiskImages\DISK1\setup.exe ${AdminStudio_Build_VERSPEC}" />
		</exec>		    	
	</target>
	
	<!-- running vb scritpt file to update PRODUCTSKU.C1A58014_9393_4964_8E4D_2B7320354DBB  property in fulledition   -->
	<target name="customizeFull">
		<echo message="******* updating PRODUCTSKU.C1A58014_9393_4964_8E4D_2B7320354DBB  property *******" />
		<exec dir="${basedir}/build/support" executable="cscript" os="Windows XP">
			<arg line="${basedir}/build/support/UpdateASFull.vbs '${Local_ASBuildDir}/Full/CD_Image/DiskImages/DISK1/AdminStudio.msi'"/>
		</exec>
	</target>

	<!-- build AdminStudio compressed setup   -->
	<target name="buildSetupAdminStudio_Comp" >
		<echo message="*******  building AdminStudio compressed setup ******* " />
		<exec executable="${PFTWBLD}" failonerror="true" >
			<arg line="'${basedir}/Build/Support/FLEXnetAdminStudio.pfw' -a -s" />
		</exec>
	</target>
	
	<!-- do the supplemental builds  -->
	<target name="supplementalSetups" >
		<echo message="*******  building AdminStudio compressed setup ******* " />
		<exec executable="${PFTWBLD}" failonerror="true" >
			<arg line="'${basedir}/Build/Support/FLEXnetAdminStudio_pp.pfw' -a -s" />
		</exec>
		
		<!-- rename AdminStudio full compressed file to AScodenamebuildnumber.exe    -->
		<!-- copy AdminStudio full compressed    -->
		<copy todir="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/${build.number}/Full/Compressed/password" preservelastmodified="true" >
			<fileset dir="${Local_ASBuildDir}/Full/Compressed/password" />
		</copy>
		
		<echo message="*******  building LimitedEditions ******* " />
		<antcall target="makeSMSEdition" />
		<antcall target="makeZENworksEdition" />
	</target>
	
	<target name="Copy_Limited_Editions_to_BuildServer" >
	<!-- copy Limited Editions to builds server   -->
		<loadproperties srcFile="C:\AdminStudio\DailyBuildResult\buildnumber.properties"/>	
		
		<echo message=" *******  copying SMSEdition to build server ******* " />
		<!-- copy SMSEdition to \\schfileserver\BUILDS\AdminStudio\version (codename)\build number\SMSEdition  -->
		<copy todir="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/${build.number}/SMSEdition" preservelastmodified="true" >
			<fileset dir="${Local_ASBuildDir}\SMSEdition\Compressed" />
		</copy>

		<echo message=" *******  copying ZENworksEdition to build server ******* " />
		<!-- copy SMSEdition to \\schfileserver\BUILDS\AdminStudio\version (codename)\build number\ZENworksEdition  -->
		<copy todir="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/${build.number}/ZENworksEdition" preservelastmodified="true" >
			<fileset dir="${Local_ASBuildDir}\ZENworksEdition\compressed" />
		</copy>
		
		<echo message="******* copying standalone build for novell *******" />
		<copy todir="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/${build.number}/ZENworksEdition/StandaloneConverter" preservelastmodified="true" >
			<fileset dir="${Local_ASBuildDir}/AdminStudio Converter for ZENWorks/Full/DiskImages/DISK1" />
		</copy>
			
	</target>	
	
	
		<!-- upload Distribute_Limited_Editions to ftp for Applabs   -->
	<target name="Copy_Limited_Editions_To_FTP">
		<loadproperties srcFile="C:\AdminStudio\DailyBuildResult\buildnumber.properties"/>	
		<copy file="${Local_ASBuildDir}\ZENworksEdition\compressed/AdminStudioZENworksEdition.exe" tofile="${AppLabs_FTPloc_Map_To_BuildMachine}/AdminStudio/ASZENEdition${build.number}.exe" preservelastmodified="true" />
		<copy file="${Local_ASBuildDir}\SMSEdition\Compressed/AdminStudioSMSEdition.exe" tofile="${AppLabs_FTPloc_Map_To_BuildMachine}/AdminStudio/ASSMSEdition${build.number}.exe" preservelastmodified="true" />
	</target>
	
	<!-- copy builds to builds server   -->
	<target name="distribute">
	
		<echo message=" *******  copying files build server ******* " />
	
		<!-- AdminStudio compressed file name -->
		<property name="ASExeName" value="AS${AS_CODENAME}${build.number}.exe" />
		<property name="RepacExeName" value="StandAloneRepackager${build.number}.exe" />
		
		
		<echo message=" *******  copying files build server ******* " />
		<!-- copy standalone repackager to \\testengineering\builds\AdminStudio\version (codename)\build number\standalonerepackager  -->
		<copy todir="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/${build.number}/StandaloneRepackager" preservelastmodified="true" >
			<fileset dir="${Local_ASBuildDir}\Repackager\FullBuild\DiskImages\DISK1" />
		</copy>
		
		<!-- copy standalone QualityMonitor to \\testengineering\builds\AdminStudio\version (codename)\build number\QualityMonitor  -->
		<copy todir="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/${build.number}/StandaloneQualityMonitor" preservelastmodified="true" >
			<fileset dir="${Local_ASBuildDir}\QualityMonitor\Compressed\DiskImages\DISK1" />
		</copy>
		
		<!-- copy AdminStudio full cd    -->
		<antcall target="customizeFull" />
		<copy todir="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/${build.number}/Full/CD_Image" preservelastmodified="true" >
			<fileset dir="${Local_ASBuildDir}/Full/CD_Image/DiskImages/DISK1" />
		</copy>
		
		<!-- rename AdminStudio full compressed file to AScodenamebuildnumber.exe    -->
		<move file="${Local_ASBuildDir}/Full/Compressed/no_password/AdminStudio.exe" tofile="${Local_ASBuildDir}/Full/Compressed/no_password/${ASExeName}" preservelastmodified="true" failonerror="false" />
		<!-- copy AdminStudio full compressed    -->
		<copy todir="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/${build.number}/Full/Compressed/no_password" preservelastmodified="true" >
			<fileset dir="${Local_ASBuildDir}/Full/Compressed/no_password" />
		</copy>
		
		
		<!-- copy debug files   -->
		<copy todir="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/${build.number}/Full/debug/map" preservelastmodified="true" >
			<fileset dir="${ASSystemFolder}" >
				<include name="*.map"/>
			</fileset>
		</copy>
		<copy todir="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/${build.number}/Full/debug/pdb" preservelastmodified="true" >
			<fileset dir="${ASSystemFolder}" >
				<include name="*.pdb" />
			</fileset>
		</copy>
		
		<antcall target="writeBuildNumber" />
		
		<!-- copy repackager test tools to testengineering\testing   -->
		<antcall target="copyTestFilesToAutomation" />
		

		<!-- upload compressed file to ftp for Applabs   -->
		<antcall target="uploadToFTP" />
	</target>
	
	<target name="writeBuildNumber">
		<propertyfile file="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/build.number">
		  <entry  key="build.number" value="${build.number}"/>
		</propertyfile>
	</target>
	
	<target name="distributeTunerOEM">
		<!-- copy tunerOEMto \\testengineering\builds\AdminStudio\version (codename)\build number\TunerOEM  -->
		<copy todir="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/${build.number}/TunerOEM/Compressed" preservelastmodified="true" >
			<fileset dir="${Local_ASBuildDir}\TunerOEM\Compressed\DiskImages\DISK1" />
		</copy>
		<copy todir="${Build_SERVER}/${VERSION_MAJOR}.${VERSION_MINOR} (${AS_CODENAME})/${build.number}/TunerOEM/CD_Image" preservelastmodified="true" >
			<fileset dir="${Local_ASBuildDir}\TunerOEM\Full\DiskImages\DISK1" />
		</copy>
	</target>
	
	<target name="makeSMSEdition">
	
		<echo message="******* copying base release to SMSEdition/CD_Image directory *******" />
		<copy todir="${Local_ASBuildDir}/SMSEdition/CD_Image" >
			<fileset dir="${Local_ASBuildDir}/Full/CD_Image/DiskImages/DISK1" />
		</copy>
		
		<echo message="******* configuring SMS edition *******" />
		<exec dir="${basedir}/build/support" executable="cscript" os="Windows XP">
			<arg line="${basedir}/build/support/UpdateSMSEdition.vbs '${Local_ASBuildDir}/SMSEdition/CD_Image/AdminStudio.msi'"/>
		</exec>

		<echo message="******* Copying Limited Edition ActivationGUI.dll *******" />
		<copy file="${basedir}/Build/Support/Activation/ActivationGuiSms.dll"
			tofile="C:/Program Files/InstallShield 11/System/ActivationSupport/TryAndBuy/ActivationGUI.dll" overwrite="true" failonerror="false" preservelastmodified="true" />

		<echo message="*******  Wrapping AdminUIFramework ******* " />
		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/WrapAdminUIFrameworkSMS.ism' -a 'Full' -r 'WrapAdminUIFramework'" />
		</exec>

		<echo message="******* Restoring ActivationGUI.dll *******" />
		<copy file="${basedir}/Build/Support/Activation/ActivationGui.dll"
			tofile="C:/Program Files/InstallShield 11/System/ActivationSupport/TryAndBuy/ActivationGUI.dll" overwrite="true" failonerror="false" preservelastmodified="true" />
		
		<echo message="******* Copying wrapped AdminUIFramework to server *******" />
		<copy file="${Local_ASBuildDir}/Full/WrapAdminUIFramework/DiskImages/DISK1/program files/Macrovision/AdminStudio/AdminUIFramework.dll" 
			tofile="${Local_ASBuildDir}/SMSEdition/CD_Image/program files/Macrovision/AdminStudio/Common/AdminUIFramework.dll" overwrite="true" failonerror="false" preservelastmodified="true" />
		
			
	</target>
	
	<target name="makeSMSEdition_Compressed">
	
		<echo message="*******  building AdminStudio SMS Edition compressed setup ******* " />
			<exec executable="${PFTWBLD}" failonerror="true" >
			<arg line="'${basedir}/Build/Support/AdminStudioSMSEdition.pfw' -a -s" />
		</exec>
	</target>
	
	
	<target name="makeZENworksEdition">
	
		<echo message="******* copying base release to ZENworksEdition\CD_Image Directory *******" />
		<copy todir="${Local_ASBuildDir}/ZENworksEdition/CD_Image">
			<fileset dir="${Local_ASBuildDir}/Full/CD_Image/DiskImages/DISK1" />
		</copy>
		
		<exec dir="${basedir}/build/support" executable="cscript" os="Windows XP">
			<arg line="${basedir}/build/support/UpdateNovellEdition.vbs '${Local_ASBuildDir}/ZENworksEdition/CD_Image/AdminStudio.msi'"/>
		</exec>	
				
		<echo message="******* Copying Limited Edition ActivationGUI.dll *******" />
		<copy file="${basedir}/Build/Support/Activation/ActivationGuiNovell.dll"
			tofile="C:/Program Files/InstallShield 11/System/ActivationSupport/TryAndBuy/ActivationGUI.dll" overwrite="true" failonerror="false" preservelastmodified="true" />
	
		<echo message="*******  Wrapping AdminUIFramework ******* " />
		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/WrapAdminUIFrameworkNovell.ism' -a 'Full' -r 'WrapAdminUIFramework'" />
		</exec>
		
		<echo message="******* Restoring ActivationGUI.dll *******" />
		<copy file="${basedir}/Build/Support/Activation/ActivationGui.dll"
			tofile="C:/Program Files/InstallShield 11/System/ActivationSupport/TryAndBuy/ActivationGUI.dll" overwrite="true" failonerror="false" preservelastmodified="true" />
		
		<echo message="******* Copying wrapped AdminUIFramework to /ZENworksEdition/CD_Image Directory *******" />
		<copy file="${Local_ASBuildDir}/Full/WrapAdminUIFramework/DiskImages/DISK1/program files/Macrovision/AdminStudio/AdminUIFramework.dll" 
			tofile="${Local_ASBuildDir}/ZENworksEdition/CD_Image/program files/Macrovision/AdminStudio/Common/AdminUIFramework.dll" overwrite="true" failonerror="false" preservelastmodified="true" />
			
	</target>
	
	<target name="makeZENworksEdition_Compressed">
	
		<echo message="*******  building AdminStudio ZENworks Edition compressed setup ******* " />
		<exec executable="${PFTWBLD}" failonerror="true" >
			<arg line="'${basedir}/Build/Support/AdminStudioZENworksEdition.pfw' -a -s" />
		</exec>
	</target>
	
	<target name="WrapASSAct" >
		<echo message="*******  Wrapping ASSAct ******* " />
		<exec executable="${ISCMDLINEBLD}" failonerror="true" >
			<arg line="-p '${basedir}/Build/Support/WrapASSAct.ism' -a 'Full' -r 'WrapASSAct'" />
		</exec>
	</target>

	<target name="CreateSilentActivator" >
		<echo message="******* Creating Silent Activator *******" />
		
		<echo message="******* Copying Silent ActivationGUI.dll *******" />
		<copy file="${basedir}/Build/Support/Activation/SilentActivationGui.dll"
			tofile="C:/Program Files/InstallShield 11/System/ActivationSupport/TryAndBuy/ActivationGUI.dll" overwrite="true" failonerror="false" preservelastmodified="true" />

		<antcall target="WrapASSAct" />

		<echo message="******* Restoring ActivationGUI.dll *******" />
		<copy file="${basedir}/Build/Support/Activation/ActivationGui.dll"
			tofile="C:/Program Files/InstallShield 11/System/ActivationSupport/TryAndBuy/ActivationGUI.dll" overwrite="true" failonerror="true" preservelastmodified="true" />
		
		<echo message="******* Copying wrapped ASSAct to Common *******" />
		<copy file="${Local_ASBuildDir}/Full/WrapASSAct/DiskImages/DISK1/program files/Macrovision/AdminStudio/ASSAct.exe" 
			tofile="${basedir}/Common/ASSAct.exe" overwrite="true" failonerror="false" preservelastmodified="true" />

		<copy file="${Local_ASBuildDir}/Full/WrapASSAct/DiskImages/DISK1/program files/Macrovision/AdminStudio/IsSvcInstASSAct.dll" 
			tofile="${basedir}/Common/IsSvcInstASSAct.dll" overwrite="true" failonerror="false" preservelastmodified="true" />

	</target>

	
	<!-- upload compressed file to ftp for Applabs   -->
	<target name="uploadToFTP">
		<copy file="${Local_ASBuildDir}/Full/Compressed/no_password/${ASExeName}" tofile="${AppLabs_FTPloc_Map_To_BuildMachine}/AdminStudio/${ASExeName}" preservelastmodified="true" />
		<copy file="${Local_ASBuildDir}\Repackager\FullBuild\DiskImages\DISK1/standalonerepackager.exe" tofile="${AppLabs_FTPloc_Map_To_BuildMachine}/AdminStudio/${RepacExeName}" preservelastmodified="true" />
	
	</target>
	
	<target name="updatebuildnumber" >
		<echo message="******* updating build number *******" />
		<buildnumber file="C:\AdminStudio\DailyBuildResult\buildnumber.properties"/>
	</target>



	<!-- Email settings -->
	<property name="mailhost" value="schexchange.macrovision.com" />
	<property name="mailfrom" value="releaseengineer@macrovision.com" />
	<property name="developmentAddress" value="asaxton@macrovision.com,dthornley@macrovision.com,richhaporia@macrovision.com,jchamberlain@macrovision.com,mtabet@macrovision.com,rgrewal@macrovision.com,jchamberlain@macrovision.com,rsehgal@macrovision.com" />	
	<property name="buildnotificationlist" value="jchamberlain@macrovision.com,dthornley@macrovision.com" />
	<property name="buildSuccessSubject" value="${AS_CODENAME}/Build is ready for testing" />
	<property name="buildSuccessMessage" value="${basedir}/build/support/success_mail_message.txt" />
	<property name="buildFailedSubject" value="${AS_CODENAME} Build failed" />
	<property name="buildFailedMessage" value="${basedir}/build/support/fail_mail_message.txt" />
	<property name="binariesFailedSubject" value="${AS_CODENAME} daily build failed" />
	<property name="binariesFailedMessage" value="${AdminStudio_Build_VERSPEC}/buildError.txt" />
	
	<!-- send build success email   -->
	<target name="buildsuccessmail" if="Build_Success" >
		<mail mailhost="${mailhost}" tolist="${buildnotificationlist}" subject="${buildSuccessSubject}">
    			<from address="${mailfrom}" />
    			<message src="${buildSuccessMessage}"></message> 
		</mail>
	</target>


	<!-- send build failure email   -->
	<target name="buildfailedmail" unless="Build_Success" >
		<mail mailhost="${mailhost}" tolist="${buildnotificationlist}" subject="${buildFailedSubject}">
    			<from address="${mailfrom}" />
    			<message src="${buildFailedMessage}"></message> 
    	</mail>
	</target>

	<!-- send build failure email   -->
	<target name="binarisfailedmail" unless="Binaries_Built" >
		<mail mailhost="${mailhost}" subject="${binariesFailedSubject}" tolist="${developmentAddress}">
    			<from address="${mailfrom}" />
    			<message src="${binariesFailedMessage}"></message> 
    	</mail>
	</target>
	
	<target name="unittests">
		<exec executable="${NUnitConsole}" resultproperty="unit_test_results">
			<arg line="${basedir}/Source/TestBed/NUnit_Tests/bin/Release/NUnit_Tests.dll /xml:C:\AdminStudio\DailyBuildResult\TestBed.UnitTest.xml" />
		</exec>	
		<antcall target="unittests_failed" />		
	</target>

	<target name="unittests_failed" depends="check-cond" unless="cond-is-true">
	<!-- send unit test failure email   -->
		<loadproperties srcFile="C:\AdminStudio\DailyBuildResult\buildnumber.properties"/>		
		<mail 
			from="releaseengineer@macrovision.com" 
			tolist="asaxton@macrovision.com,dthornley@macrovision.com,mtabet@macrovision.com, richhaporia@macrovision.com, rgrewal@macrovision.com,rsehgal@macrovision.com" 
			subject="AdminStudio Client Tools Build ${build.number} Unit Tests failed"
			message="\\asamsbuild\DailyBuildResult\TestBed.UnitTest.xml" 
			mailhost="schexchange.macrovision.com">
		</mail>
	</target>

	<target name="check-cond">
	  <condition property="cond-is-true">
	     <equals arg1="${unit_test_results}" arg2="0" />	    
	  </condition>
	</target>
	
	
</project>
